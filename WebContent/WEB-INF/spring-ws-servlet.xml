<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sws="http://www.springframework.org/schema/web-services"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <description>
        This web application context contains Spring-WS beans. The beans defined in this context are automatically
        detected by Spring-WS, similar to the way Controllers are picked up in Spring Web MVC.
    </description>

    <context:component-scan base-package="com.cgweb"/>

    <sws:annotation-driven />

  <sws:dynamic-wsdl id="cgweb" portTypeName="Cgweb" locationUri="/cgwebservices/">
        <sws:xsd location="/WEB-INF/service.xsd"/>
    </sws:dynamic-wsdl>
    
    <sws:interceptors>
        <bean class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor">
            <description>
                This interceptor validates both incoming and outgoing message contents according to the 'echo.xsd' XML
                Schema file.
            </description>
            <property name="schema" value="/WEB-INF/service.xsd"/>
            <property name="validateRequest" value="true"/>
            <property name="validateResponse" value="true"/>
        </bean>
        
        <bean class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor">
            <description>
                This interceptor logs the message payload.
            </description>
        </bean>
        
        
    </sws:interceptors>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                  <property name="driverClassName" value="com.mysql.jdbc.Driver" />
                  <property name="url" value="jdbc:mysql://localhost:3306/addressbook" />
                  <property name="username" value="root" />
                  <property name="password" value="admin" />
    </bean>
  
  <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:packagesToScan="com.cgweb"
		p:dataSource-ref="dataSource"
		p:jpaVendorAdapter-ref="hibernateVendor"
		p:jpaPropertyMap-ref="jpaPropertyMap"/>
 
  <util:map id="jpaPropertyMap">
	<entry key="hibernate.hbm2ddl.auto" value="update"/>
	<entry key="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect"/>
  </util:map>
 
  <bean id="persistenceProvider" class="org.hibernate.ejb.HibernatePersistence" /> 
  <bean id="hibernateVendor" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:showSql="true"/>
  
  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
  </bean>

</beans>

